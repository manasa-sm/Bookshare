[{"C:\\Users\\Manasa\\Desktop\\bookfinal\\src\\index.js":"1","C:\\Users\\Manasa\\Desktop\\bookfinal\\src\\App.js":"2","C:\\Users\\Manasa\\Desktop\\bookfinal\\src\\Components\\Header.js":"3","C:\\Users\\Manasa\\Desktop\\bookfinal\\src\\Components\\Main.js":"4","C:\\Users\\Manasa\\Desktop\\bookfinal\\src\\Components\\ListBook.js":"5","C:\\Users\\Manasa\\Desktop\\bookfinal\\src\\Components\\EditBook.js":"6","C:\\Users\\Manasa\\Desktop\\bookfinal\\src\\Components\\AddBook.js":"7","C:\\Users\\Manasa\\Desktop\\bookfinal\\src\\Components\\Services.js":"8","C:\\Users\\Manasa\\Desktop\\bookfinal\\src\\Components\\BorrowBook.js":"9","C:\\Users\\Manasa\\Desktop\\bookfinal\\src\\Components\\BookSearch.js":"10","C:\\Users\\Manasa\\Desktop\\bookfinal\\src\\Components\\SearchAuthor.js":"11","C:\\Users\\Manasa\\Desktop\\bookfinal\\src\\Components\\SearchUser.js":"12","C:\\Users\\Manasa\\Desktop\\bookfinal\\src\\Components\\ReturnBook.js":"13"},{"size":261,"mtime":1607133970000,"results":"14","hashOfConfig":"15"},{"size":274,"mtime":1607198110985,"results":"16","hashOfConfig":"15"},{"size":1538,"mtime":1607281231617,"results":"17","hashOfConfig":"15"},{"size":1257,"mtime":1607274198092,"results":"18","hashOfConfig":"15"},{"size":2881,"mtime":1607278091937,"results":"19","hashOfConfig":"15"},{"size":3239,"mtime":1607274249726,"results":"20","hashOfConfig":"15"},{"size":2695,"mtime":1607274231039,"results":"21","hashOfConfig":"15"},{"size":520,"mtime":1607274218296,"results":"22","hashOfConfig":"15"},{"size":2879,"mtime":1607274242774,"results":"23","hashOfConfig":"15"},{"size":2892,"mtime":1607326507378,"results":"24","hashOfConfig":"15"},{"size":2905,"mtime":1607326196398,"results":"25","hashOfConfig":"15"},{"size":3229,"mtime":1607274205152,"results":"26","hashOfConfig":"15"},{"size":2809,"mtime":1607274190003,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"142mgcp",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"30"},"C:\\Users\\Manasa\\Desktop\\bookfinal\\src\\index.js",[],["61","62"],"C:\\Users\\Manasa\\Desktop\\bookfinal\\src\\App.js",[],"C:\\Users\\Manasa\\Desktop\\bookfinal\\src\\Components\\Header.js",[],"C:\\Users\\Manasa\\Desktop\\bookfinal\\src\\Components\\Main.js",[],"C:\\Users\\Manasa\\Desktop\\bookfinal\\src\\Components\\ListBook.js",["63"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../index.css\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\n// To use routing functionalities\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../index.css\";\r\nimport BookService from \"./Services\";\r\nimport Header from \"./Header\";\r\n\r\nvar divStyle = {\r\n  margin: \"8% 8%\",\r\n};\r\n\r\nclass ListBook extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.bookService = new BookService();\r\n    this.state = {\r\n      books: [],\r\n    };\r\n    this.deleteBook = this.deleteBook.bind(this);\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.getBookList();\r\n  };\r\n\r\n  // To get all the books\r\n  getBookList() {\r\n    axios\r\n      .get(\"http://localhost:4000/books\")\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({\r\n          books: response.data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  // To delete any book\r\n  deleteBook(bookid) {\r\n    this.bookService.deleteBook(bookid);\r\n    this.getBookList();\r\n  }\r\n\r\n  render() {\r\n    const { books } = this.state;\r\n    return (\r\n      <div style={divStyle}>\r\n        <h3>Welcome to the Library</h3>\r\n        <Table responsive>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Title</th>\r\n              <th>Author</th>\r\n              <th>Donated By</th>\r\n              <th>About</th>\r\n              <th></th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {books &&\r\n              books.map((book, i) => {\r\n                return (\r\n                  <tr key={i}>\r\n                    <td>{i}</td>\r\n                    <td>{book.title}</td>\r\n                    <td>{book.author}</td>\r\n                    <td>{book.donatedbyName}</td>\r\n                    <td>{book.note}</td>\r\n                    <td>\r\n                      <Link\r\n                        to={\"editbook/\" + book._id}\r\n                        className=\"btn btn-primary\"\r\n                      >\r\n                        Edit\r\n                      </Link>\r\n                    </td>\r\n                    <td>\r\n                      <Link\r\n                        to={\"borrowbook/\" + book._id}\r\n                        className=\"btn btn-primary\"\r\n                      >\r\n                        Borrow\r\n                      </Link>\r\n                    </td>\r\n                    <td>\r\n                      <Button\r\n                        onClick={() => this.deleteBook(book._id)}\r\n                        bsStyle=\"danger\"\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListBook;\r\n","C:\\Users\\Manasa\\Desktop\\bookfinal\\src\\Components\\EditBook.js",["64"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Header from \"./Header\";\r\n\r\nconst customStyle = {\r\n  width: \"300px\",\r\n  margin: \"0 auto\",\r\n};\r\n\r\nclass EditBook extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"\",\r\n      author: \"\",\r\n      donatedbyName: \"\",\r\n      note: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.getBookById();\r\n  };\r\n\r\n  // To get book based on ID\r\n  getBookById() {\r\n    axios\r\n      .get(\"http://localhost:4000/books/editBook/\" + this.props.match.params.id)\r\n      .then((response) => {\r\n        this.setState({\r\n          title: response.data.title,\r\n          author: response.data.author,\r\n          donatedbyName: response.data.donatedbyName,\r\n          note: response.data.note,\r\n          borrowedStatus: response.data.borrowedStatus,\r\n          borrowedbyName: response.data.borrowedbyName,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  // To update the record on submit\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { title, author, donatedbyName, note } = this.state;\r\n    axios\r\n      .post(\r\n        \"http://localhost:4000/books/updateBook/\" + this.props.match.params.id,\r\n        {\r\n          title: title,\r\n          author: author,\r\n          donatedbyName: donatedbyName,\r\n          note: note,\r\n          borrowedStatus: 0,\r\n          borrowedbyName: \"\",\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.props.history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <form style={customStyle} onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Book Title\r\n            <input\r\n              name=\"title\"\r\n              type=\"text\"\r\n              value={this.state.title}\r\n              onChange={this.handleChange}\r\n              className=\"form-control\"\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            Author\r\n            <input\r\n              name=\"author\"\r\n              type=\"text\"\r\n              value={this.state.author}\r\n              onChange={this.handleChange}\r\n              className=\"form-control\"\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            Donated By\r\n            <input\r\n              name=\"email\"\r\n              type=\"text\"\r\n              value={this.state.donatedbyName}\r\n              onChange={this.handleChange}\r\n              className=\"form-control\"\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            About\r\n            <input\r\n              name=\"note\"\r\n              type=\"text\"\r\n              value={this.state.note}\r\n              onChange={this.handleChange}\r\n              className=\"form-control\"\r\n            />\r\n          </label>\r\n          <br />\r\n          <input type=\"submit\" value=\"submit\" className=\"btn btn-primary\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditBook;\r\n","C:\\Users\\Manasa\\Desktop\\bookfinal\\src\\Components\\AddBook.js",["65"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Header from \"./Header\";\r\n\r\nconst customStyle = {\r\n  width: \"300px\",\r\n  margin: \"0 auto\",\r\n};\r\n\r\nclass AddBook extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"\",\r\n      author: \"\",\r\n      donatedbyName: \"\",\r\n      note: \"\",\r\n      borrowedStatus: \"\",\r\n      borrowedbyName: \"\",\r\n    };\r\n  }\r\n\r\n  // When value changes of the fields\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  // To add new book when user submits the form\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { title, author, donatedbyName, note } = this.state;\r\n    axios\r\n      .post(\"http://localhost:4000/books/addBook\", {\r\n        title: title,\r\n        author: author,\r\n        donatedbyName: donatedbyName,\r\n        note: note,\r\n        borrowedStatus: 0,\r\n        borrowedbyName: \"\",\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.props.history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <form style={customStyle} onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Book Title\r\n            <input\r\n              name=\"title\"\r\n              type=\"text\"\r\n              value={this.state.title}\r\n              onChange={this.handleChange}\r\n              className=\"form-control\"\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            Author\r\n            <input\r\n              name=\"author\"\r\n              type=\"text\"\r\n              value={this.state.author}\r\n              onChange={this.handleChange}\r\n              className=\"form-control\"\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            Donator Name\r\n            <input\r\n              name=\"donatedbyName\"\r\n              type=\"text\"\r\n              value={this.state.donatedbyName}\r\n              onChange={this.handleChange}\r\n              className=\"form-control\"\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            About\r\n            <input\r\n              name=\"note\"\r\n              type=\"text\"\r\n              value={this.state.note}\r\n              onChange={this.handleChange}\r\n              className=\"form-control\"\r\n            />\r\n          </label>\r\n          <br />\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Donate this Book\"\r\n            className=\"btn btn-primary\"\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddBook;\r\n","C:\\Users\\Manasa\\Desktop\\bookfinal\\src\\Components\\Services.js",[],"C:\\Users\\Manasa\\Desktop\\bookfinal\\src\\Components\\BorrowBook.js",["66","67"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Header from \"./Header\";\r\n\r\nconst customStyle = {\r\n  width: \"300px\",\r\n  margin: \"0 auto\",\r\n};\r\n\r\nclass BorrowBook extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"\",\r\n      author: \"\",\r\n      donatedbyName: \"\",\r\n      note: \"\",\r\n      borrowedStatus: \"\",\r\n      borrowedbyName: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.getBookById();\r\n  };\r\n\r\n  // To get book based on ID\r\n  getBookById() {\r\n    axios\r\n      .get(\"http://localhost:4000/books/editBook/\" + this.props.match.params.id)\r\n      .then((response) => {\r\n        this.setState({\r\n          title: response.data.title,\r\n          author: response.data.author,\r\n          donatedbyName: response.data.donatedbyName,\r\n          note: response.data.note,\r\n          borrowedStatus: response.data.borrowedStatus,\r\n          borrowedbyName: response.data.borrowedbyName,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  // To update the record on submit\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      title,\r\n      author,\r\n      donatedbyName,\r\n      note,\r\n      borrowedStatus,\r\n      borrowedbyName,\r\n    } = this.state;\r\n    axios\r\n      .post(\r\n        \"http://localhost:4000/books/updateBook/\" + this.props.match.params.id,\r\n        {\r\n          title: title,\r\n          author: author,\r\n          donatedbyName: donatedbyName,\r\n          note: note,\r\n          borrowedStatus: 1,\r\n          borrowedbyName: borrowedbyName,\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.props.history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <form style={customStyle} onSubmit={this.handleSubmit}>\r\n          <label>Book Title: {this.state.title}</label>\r\n          <br />\r\n          <label>Author: {this.state.author}</label>\r\n          <br />\r\n          <label>Donated By : {this.state.donatedbyName}</label>\r\n          <br />\r\n          <label>About: {this.state.note}</label>\r\n          <br />\r\n          <label>\r\n            Borrowed By\r\n            <input\r\n              name=\"borrowedbyName\"\r\n              type=\"text\"\r\n              value={this.state.borrowedbyName}\r\n              onChange={this.handleChange}\r\n              className=\"form-control\"\r\n            />\r\n          </label>\r\n          <br />\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Confirm Borrow\"\r\n            className=\"btn btn-primary\"\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BorrowBook;\r\n","C:\\Users\\Manasa\\Desktop\\bookfinal\\src\\Components\\BookSearch.js",["68","69","70"],"C:\\Users\\Manasa\\Desktop\\bookfinal\\src\\Components\\SearchAuthor.js",["71","72","73"],"C:\\Users\\Manasa\\Desktop\\bookfinal\\src\\Components\\SearchUser.js",["74","75","76"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\n// To use routing functionalities\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../index.css\";\r\nimport BookService from \"./Services\";\r\nimport Header from \"./Header\";\r\n\r\nvar divStyle = {\r\n  margin: \"8% 8%\",\r\n};\r\n\r\nconst customStyle = {\r\n  width: \"300px\",\r\n  margin: \"0 auto\",\r\n};\r\nclass SearchUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.bookService = new BookService();\r\n    this.state = {\r\n      books: [],\r\n    };\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { borrowedbyName } = this.state;\r\n    axios\r\n      .get(\r\n        \"http://localhost:4000/books/searchUser/\" + this.state.borrowedbyName\r\n      )\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({\r\n          books: response.data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { books } = this.state;\r\n    return (\r\n      <div>\r\n        <form style={customStyle} onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Search User:\r\n            <input\r\n              name=\"borrowedbyName\"\r\n              type=\"text\"\r\n              value={this.state.borrowedbyName}\r\n              onChange={this.handleChange}\r\n              className=\"form-control\"\r\n            />\r\n          </label>\r\n          <input type=\"submit\" value=\"submit\" className=\"btn btn-primary\" />\r\n        </form>\r\n        <div style={divStyle}>\r\n          <h3>Borrowed Books</h3>\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Title</th>\r\n                <th>Author</th>\r\n                <th>Donate By</th>\r\n                <th>About</th>\r\n                <th></th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {books &&\r\n                books.map((book, i) => {\r\n                  return (\r\n                    <tr key={i}>\r\n                      <td>{i}</td>\r\n                      <td>{book.title}</td>\r\n                      <td>{book.author}</td>\r\n                      <td>{book.donatedbyName}</td>\r\n                      <td>{book.note}</td>\r\n                      <td>\r\n                        <Link\r\n                          to={\"editbook/\" + book._id}\r\n                          className=\"btn btn-primary\"\r\n                        >\r\n                          Edit\r\n                        </Link>\r\n                      </td>\r\n                      <td>\r\n                        <Link\r\n                          to={\"returnbook/\" + book._id}\r\n                          className=\"btn btn-primary\"\r\n                        >\r\n                          Return\r\n                        </Link>\r\n                      </td>\r\n                      <td></td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchUser;\r\n","C:\\Users\\Manasa\\Desktop\\bookfinal\\src\\Components\\ReturnBook.js",["77","78","79"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Header from \"./Header\";\r\n\r\nconst customStyle = {\r\n  width: \"300px\",\r\n  margin: \"0 auto\",\r\n};\r\n\r\nclass ReturnBook extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"\",\r\n      author: \"\",\r\n      donatedbyName: \"\",\r\n      note: \"\",\r\n      borrowedStatus: \"\",\r\n      borrowedbyName: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.getBookById();\r\n  };\r\n\r\n  // To get book based on ID\r\n  getBookById() {\r\n    axios\r\n      .get(\"http://localhost:4000/books/editBook/\" + this.props.match.params.id)\r\n      .then((response) => {\r\n        this.setState({\r\n          title: response.data.title,\r\n          author: response.data.author,\r\n          donatedbyName: response.data.donatedbyName,\r\n          note: response.data.note,\r\n          borrowedStatus: response.data.borrowedStatus,\r\n          borrowedbyName: response.data.borrowedbyName,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  // To update the record on submit\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      title,\r\n      author,\r\n      donatedbyName,\r\n      note,\r\n      borrowedStatus,\r\n      borrowedbyName,\r\n    } = this.state;\r\n    axios\r\n      .post(\r\n        \"http://localhost:4000/books/updateBook/\" + this.props.match.params.id,\r\n        {\r\n          title: title,\r\n          author: author,\r\n          donatedbyName: donatedbyName,\r\n          note: note,\r\n          borrowedStatus: 0,\r\n          borrowedbyName: \"\",\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.props.history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <form style={customStyle} onSubmit={this.handleSubmit}>\r\n          <label>Book Title: {this.state.title}</label>\r\n          <br />\r\n          <label>Author: {this.state.author}</label>\r\n          <br />\r\n          <label>Donated By : {this.state.donatedbyName}</label>\r\n          <br />\r\n          <label>About: {this.state.note}</label>\r\n          <br />\r\n          <label>\r\n            Borrowed By\r\n            <input\r\n              name=\"borrowedbyName\"\r\n              type=\"text\"\r\n              value={this.state.borrowedbyName}\r\n              onChange={this.handleChange}\r\n              className=\"form-control\"\r\n            />\r\n          </label>\r\n          <br />\r\n          <input type=\"submit\" value=\"Return\" className=\"btn btn-primary\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReturnBook;\r\n",{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":9,"column":8,"nodeType":"86","messageId":"87","endLine":9,"endColumn":14},{"ruleId":"84","severity":1,"message":"85","line":3,"column":8,"nodeType":"86","messageId":"87","endLine":3,"endColumn":14},{"ruleId":"84","severity":1,"message":"85","line":3,"column":8,"nodeType":"86","messageId":"87","endLine":3,"endColumn":14},{"ruleId":"84","severity":1,"message":"85","line":3,"column":8,"nodeType":"86","messageId":"87","endLine":3,"endColumn":14},{"ruleId":"84","severity":1,"message":"88","line":58,"column":7,"nodeType":"86","messageId":"87","endLine":58,"endColumn":21},{"ruleId":"84","severity":1,"message":"89","line":3,"column":17,"nodeType":"86","messageId":"87","endLine":3,"endColumn":23},{"ruleId":"84","severity":1,"message":"85","line":8,"column":8,"nodeType":"86","messageId":"87","endLine":8,"endColumn":14},{"ruleId":"84","severity":1,"message":"90","line":33,"column":13,"nodeType":"86","messageId":"87","endLine":33,"endColumn":18},{"ruleId":"84","severity":1,"message":"89","line":3,"column":17,"nodeType":"86","messageId":"87","endLine":3,"endColumn":23},{"ruleId":"84","severity":1,"message":"85","line":8,"column":8,"nodeType":"86","messageId":"87","endLine":8,"endColumn":14},{"ruleId":"84","severity":1,"message":"91","line":33,"column":13,"nodeType":"86","messageId":"87","endLine":33,"endColumn":19},{"ruleId":"84","severity":1,"message":"89","line":3,"column":17,"nodeType":"86","messageId":"87","endLine":3,"endColumn":23},{"ruleId":"84","severity":1,"message":"85","line":8,"column":8,"nodeType":"86","messageId":"87","endLine":8,"endColumn":14},{"ruleId":"84","severity":1,"message":"92","line":33,"column":13,"nodeType":"86","messageId":"87","endLine":33,"endColumn":27},{"ruleId":"84","severity":1,"message":"85","line":3,"column":8,"nodeType":"86","messageId":"87","endLine":3,"endColumn":14},{"ruleId":"84","severity":1,"message":"88","line":58,"column":7,"nodeType":"86","messageId":"87","endLine":58,"endColumn":21},{"ruleId":"84","severity":1,"message":"92","line":59,"column":7,"nodeType":"86","messageId":"87","endLine":59,"endColumn":21},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'borrowedStatus' is assigned a value but never used.","'Button' is defined but never used.","'title' is assigned a value but never used.","'author' is assigned a value but never used.","'borrowedbyName' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]